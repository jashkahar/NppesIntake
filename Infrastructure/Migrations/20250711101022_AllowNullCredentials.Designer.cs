// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NppesIntake.Infrastructure;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(NppesIntakeDbContext))]
    [Migration("20250711101022_AllowNullCredentials")]
    partial class AllowNullCredentials
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NppesIntake.Core.Entities.BusinessUnit", b =>
                {
                    b.Property<int>("BusinessUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessUnitId"));

                    b.Property<long?>("Npi")
                        .HasColumnType("bigint");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BusinessUnitId");

                    b.ToTable("BusinessUnits");
                });

            modelBuilder.Entity("NppesIntake.Core.Entities.BusinessUnitMember", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "BusinessUnitId");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("BusinessUnitMembers");
                });

            modelBuilder.Entity("NppesIntake.Core.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("Credential")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Npi")
                        .HasColumnType("bigint");

                    b.HasKey("MemberId");

                    b.HasIndex("Npi")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("NppesIntake.Core.Entities.MemberContactDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddressPurpose")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberContactDetails");
                });

            modelBuilder.Entity("NppesIntake.Core.Entities.BusinessUnitMember", b =>
                {
                    b.HasOne("NppesIntake.Core.Entities.BusinessUnit", "BusinessUnit")
                        .WithMany("BusinessUnitMembers")
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NppesIntake.Core.Entities.Member", "Member")
                        .WithMany("BusinessUnitMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessUnit");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NppesIntake.Core.Entities.MemberContactDetails", b =>
                {
                    b.HasOne("NppesIntake.Core.Entities.Member", "Member")
                        .WithMany("ContactDetails")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NppesIntake.Core.Entities.BusinessUnit", b =>
                {
                    b.Navigation("BusinessUnitMembers");
                });

            modelBuilder.Entity("NppesIntake.Core.Entities.Member", b =>
                {
                    b.Navigation("BusinessUnitMembers");

                    b.Navigation("ContactDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
